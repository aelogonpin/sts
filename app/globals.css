@import 'tailwindcss';

/* Need migration */
@plugin 'tailwindcss-animate';

@import './kladewind.css';
@import './schemes.css';

@layer base {
  /*
    The default border color has changed to `currentColor` in Tailwind CSS v4,
    so we've added these compatibility styles to make sure everything still
    looks the same as it did with Tailwind CSS v3.

    If we ever want to remove these styles, we need to add an explicit border
    color utility to any element that depends on these defaults.
  */
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: color-mix(in oklab, var(--color-fg) 30%, transparent);
  }

  /* Global config from my all time favorite Kladenets */
  :root {
    /* Floating UI */
    --order-floating: 106;
    /* --floating-ui-bg: theme(colors.bg / 60%); */
    /* chrome lck color bug workaround, should be removed when bug fixed */
    --floating-ui-bg: --theme(--color-white / 90%);
    --floating-ui-backdrop: saturate(2) blur(40px);
    --floating-ui-shadow: 0 0 0 0.5px --theme(--color-black / 40%),
      0 20px 60px 0 color-mix(in oklch, --theme(--color-ac / 20%) 60%, --theme(--color-black / 20%));
    --floating-ui-border: 1px solid --theme(--color-white / 40%);
    --form-line-height: 1.2;
  }

  &[data-theme='dark'] {
    --floating-ui-bg: --theme(--color-bg / 20%);
    --floating-ui-backdrop: brightness(0.5) saturate(2) contrast(0.9) blur(40px);
    --floating-ui-shadow: 0 0 0 0.5px --theme(--color-black / 80%), 0 20px 60px 0 --theme(--color-black / 60%);
    --floating-ui-border: 1px solid --theme(--color-fg / 20%);
  }

  html,
  body {
    color: var(--color-fg);
    background: var(--color-bg);

    font-size: 16px;
    padding: 0;
    margin: 0;
    font-family: var(--font-sans);

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  a {
    color: inherit;
    text-decoration: none;
    font-weight: 500;
  }

  p {
    margin: 0.8rem 0;
    line-height: calc(var(--line-height) * 1.2);
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: bold;
    margin: 1rem 0;
  }

  h1 {
    font-size: 1.6rem;
  }
  h2 {
    font-size: 1.4rem;
  }
  h3 {
    font-size: 1.2rem;
  }
  h4 {
    font-size: 1.1rem;
  }
  h5 {
    font-size: 1.1rem;
  }
  h6 {
    font-size: 1.1rem;
  }

  ul,
  ol {
    margin-bottom: 1.8rem;
    list-style: none;
    counter-reset: list;
    margin-left: 1em;

    li {
      line-height: calc(var(--line-height) * 1.2);

      &::before {
        position: absolute;
        display: flex;
        justify-content: flex-end;
        width: 4em;
        margin-top: 0;
        margin-left: -4em;
        text-align: right;
        opacity: 0.6;
        pointer-events: none;
      }

      > ul,
      > ol {
        margin-left: 1em;
        margin-bottom: 0;
      }
    }
  }

  ul li::before {
    content: '-';
    padding-right: 0.5em;
  }

  ol li::before {
    counter-increment: list;
    content: counter(list) '.';
    padding-right: 0.25em;
  }

  .btn,
  .input,
  .select,
  button,
  input,
  select {
    line-height: var(--form-line-height);

    &:disabled {
      opacity: 0.5;
    }
  }

  textarea {
    color: var(--color-fg);
    font-size: 1rem;
    background: --theme(--color-fg / 5%);
    border: 1px solid --theme(--color-fg / 20%);
    box-shadow: inset 0 1px 1px 0 --theme(--color-black / 10%);
    border-radius: 4px;
    outline: none;
    padding: 0.25em 0.5em;

    &:focus,
    &:active {
      border-color: var(--color-fg);
    }

    &::placeholder {
      color: --theme(--color-fg / 40%);
    }

    &:disabled {
      opacity: 0.5;
    }

    &.loading {
      cursor: wait;
    }
  }

  pre {
    overflow-x: auto;
    padding: 0.5rem;
    background-color: --theme(--color-amber-600 / 10%);
  }

  code {
    color: var(--color-amber-600);
    word-break: break-word;
  }

  summary {
    margin: 0.25em 0;
    cursor: pointer;
  }

  hr {
    border: none;
    border-top: 1px solid --theme(--color-fg / 20%);
  }

  kbd {
    /* border: 1px solid theme(colors.fg / 20%); */
    background-color: --theme(--color-white / 20%);
    border-radius: 4px;
    line-height: 1;
    padding: 1px 6px;
    font-weight: bold;
    box-shadow:
      0 1px 1px 0 --theme(--color-fg / 10%),
      inset 0 0 0 1px --theme(--color-fg / 20%);
  }

  /* Custom all scrollbars inside div, except the global body ones */
  div::-webkit-scrollbar {
    width: 6px;
    height: 6px;
    background: transparent;

    &:hover {
      background: --theme(--color-fg / 10%);
    }
  }

  div:hover {
    &::-webkit-scrollbar-thumb {
      background: --theme(--color-fg / 40%);
      border-radius: 6px;
    }
  }

  div::-webkit-scrollbar-thumb {
    &:active {
      background: --theme(--color-fg / 80%);
    }
  }
}

.floating {
  background: var(--floating-ui-bg);
  box-shadow: var(--floating-ui-shadow);
  border: var(--floating-ui-border);
  /* width: max-content; */
  -webkit-backdrop-filter: var(--floating-ui-backdrop);
  backdrop-filter: var(--floating-ui-backdrop);
  z-index: var(--order-floating);
}

::selection {
  background: --theme(--color-fg / 30%);
}

.vsc-controller {
  display: none;
}

.indicator {
  background-color: currentColor;
  display: block;
  border-radius: 100%;

  &::before {
    display: block;
    content: '';
    width: 100%;
    height: 100%;
    border-radius: 100%;
    background-color: currentColor;
    opacity: 0;
    transform: scale(1);
    animation: radar 2s ease infinite;
  }

  &.up::before {
    animation-duration: 4s;
  }

  &.partial::before {
    animation-duration: 2s;
  }

  &.down::before {
    animation-duration: 1s;
  }

  &.unknown::before {
    animation: none;
  }
}

@keyframes radar {
  0% {
    opacity: 0.8;
  }
  100% {
    opacity: 0;
    transform: scale(2);
  }
}
